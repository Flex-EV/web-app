name: Deploy workflow

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yaml
    with:
      node_version: "18"

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download React Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: react-build
          path: ./dist

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get Commit Hash
        id: commit-hash
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Get Timestamp
        id: timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

      - name: Build, Tag, and Push Docker Image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPO_NAME }}
          IMAGE_TAG: "${{ env.commit_hash }}-${{ env.timestamp }}"
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" > image-uri.txt

      - name: Upload Image URI Artifact
        uses: actions/upload-artifact@v3
        with:
          name: image-uri
          path: image-uri.txt
